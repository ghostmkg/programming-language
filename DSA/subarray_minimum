class Solution {
public:
    const int mod=1e9+7;
    // TC:- O(n)
    // SC:- O(n)
    int sumSubarrayMins(vector<int>&arr)
    {
        int ans=0,n=arr.size();
        vector<int>nse(n),pse(n);
        stack<int>st;
        for(int i=0;i<n;i++)
        {
            while(!st.empty() && arr[i]<=arr[st.top()])
            {
                nse[st.top()]=i;
                st.pop();
            }
            st.push(i);
        }
        while(!st.empty())
        {
            nse[st.top()]=n;
            st.pop();
        }
        for(int i=n-1;i>=0;i--)
        {
            while(!st.empty() && arr[i]<arr[st.top()])
            {
                pse[st.top()]=i;
                st.pop();
            }
            st.push(i);
        }
        while(!st.empty())
        {
            pse[st.top()]=-1;
            st.pop();
        }
        for(long i=0;i<n;i++)
        {
            long stretch=((((i-pse[i])*(nse[i]-i))%mod)*arr[i])%mod;
            ans=(ans+stretch)%mod;
        }
        return ans;
    }
};
